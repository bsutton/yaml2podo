// Generated by 'yaml2podo'
// Version: 0.1.15
// https://pub.dev/packages/yaml2podo

class Alias {
  final String clazz;

  Alias({this.clazz});

  factory Alias.fromJson(Map map) {
    return Alias(clazz: map['class'] as String);
  }

  Map<String, dynamic> toJson() {
    var result = <String, dynamic>{};
    result['class'] = clazz;
    return result;
  }
}

class Bar {
  final int i;

  Bar({this.i});

  factory Bar.fromJson(Map map) {
    return Bar(i: map['i'] as int);
  }

  Map<String, dynamic> toJson() {
    var result = <String, dynamic>{};
    result['i'] = i;
    return result;
  }
}

class EmptyObject {
  EmptyObject();

  factory EmptyObject.fromJson(Map map) {
    return EmptyObject();
  }

  Map<String, dynamic> toJson() {
    var result = <String, dynamic>{};
    return result;
  }
}

class Foo {
  final Map<String, Bar> bars;

  Foo({this.bars});

  factory Foo.fromJson(Map map) {
    return Foo(bars: _toMap(map['bars'], (e) => Bar.fromJson(e as Map)));
  }

  Map<String, dynamic> toJson() {
    var result = <String, dynamic>{};
    result['bars'] = _fromMap(bars, (e) => e.toJson());
    return result;
  }
}

class ObjectWithObjects {
  final Map<String, Object> map;
  final List<Object> list;

  ObjectWithObjects({this.map, this.list});

  factory ObjectWithObjects.fromJson(Map map) {
    return ObjectWithObjects(
        map: _toMap(map['map'], (e) => e),
        list: _toList(map['list'], (e) => e));
  }

  Map<String, dynamic> toJson() {
    var result = <String, dynamic>{};
    result['map'] = _fromMap(map, (e) => e);
    result['list'] = _fromList(list, (e) => e);
    return result;
  }
}

class Order {
  final double amount;
  final bool isShipped;
  final DateTime date;
  final List<OrderItem> items;

  Order({this.amount, this.isShipped, this.date, this.items});

  factory Order.fromJson(Map map) {
    return Order(
        amount: _toDouble(map['amount']),
        isShipped: map['is_shipped'] as bool,
        date: _toDateTime(map['date']),
        items: _toList(map['items'], (e) => OrderItem.fromJson(e as Map)));
  }

  Map<String, dynamic> toJson() {
    var result = <String, dynamic>{};
    result['amount'] = amount;
    result['is_shipped'] = isShipped;
    result['date'] = _fromDateTime(date);
    result['items'] = _fromList(items, (e) => e.toJson());
    return result;
  }
}

class OrderItem {
  final int quantity;
  final num price;
  final Product product;

  OrderItem({this.quantity, this.price, this.product});

  factory OrderItem.fromJson(Map map) {
    return OrderItem(
        quantity: map['quantity'] as int,
        price: map['price'] as num,
        product: _toObject(map['product'], (e) => Product.fromJson(e as Map)));
  }

  Map<String, dynamic> toJson() {
    var result = <String, dynamic>{};
    result['quantity'] = quantity;
    result['price'] = price;
    result['product'] = product?.toJson();
    return result;
  }
}

class Product {
  final String name;
  final int id;

  Product({this.name, this.id});

  factory Product.fromJson(Map map) {
    return Product(name: map['name'] as String, id: map['id'] as int);
  }

  Map<String, dynamic> toJson() {
    var result = <String, dynamic>{};
    result['name'] = name;
    result['id'] = id;
    return result;
  }
}

class Super {
  final Map<String, List<int>> map2;
  final DateTime date;
  final String string;
  final Foo foo2;
  final Map<String, List<Bar>> map;
  final bool boolean;
  final double float;
  final int integer;
  final Foo foo;
  final List<Map<String, Bar>> list;

  Super(
      {this.map2,
      this.date,
      this.string,
      this.foo2,
      this.map,
      this.boolean,
      this.float,
      this.integer,
      this.foo,
      this.list});

  factory Super.fromJson(Map map) {
    return Super(
        map2: _toMap(map['map2'], (e) => _toList(e, (e) => e as int)),
        date: _toDateTime(map['date']),
        string: map['string'] as String,
        foo2: _toObject(map['foo2'], (e) => Foo.fromJson(e as Map)),
        map: _toMap(
            map['map'], (e) => _toList(e, (e) => Bar.fromJson(e as Map))),
        boolean: map['boolean'] as bool,
        float: _toDouble(map['float']),
        integer: map['integer'] as int,
        foo: _toObject(map['foo'], (e) => Foo.fromJson(e as Map)),
        list: _toList(
            map['list'], (e) => _toMap(e, (e) => Bar.fromJson(e as Map))));
  }

  Map<String, dynamic> toJson() {
    var result = <String, dynamic>{};
    result['map2'] = _fromMap(map2, (e) => _fromList(e, (e) => e));
    result['date'] = _fromDateTime(date);
    result['string'] = string;
    result['foo2'] = foo2?.toJson();
    result['map'] = _fromMap(map, (e) => _fromList(e, (e) => e.toJson()));
    result['boolean'] = boolean;
    result['float'] = float;
    result['integer'] = integer;
    result['foo'] = foo?.toJson();
    result['list'] = _fromList(list, (e) => _fromMap(e, (e) => e.toJson()));
    return result;
  }
}

String _fromDateTime(dynamic data) {
  if (data == null) {
    return null;
  }
  if (data is DateTime) {
    return data.toIso8601String();
  }
  return data as String;
}

List _fromList(dynamic data, dynamic Function(dynamic) toJson) {
  if (data == null) {
    return null;
  }
  var result = [];
  for (var element in data) {
    var value;
    if (element != null) {
      value = toJson(element);
    }
    result.add(value);
  }
  return result;
}

Map<String, dynamic> _fromMap(dynamic data, dynamic Function(dynamic) toJson) {
  if (data == null) {
    return null;
  }
  var result = <String, dynamic>{};
  for (var key in data.keys) {
    var value;
    var element = data[key];
    if (element != null) {
      value = toJson(element);
    }
    result[key.toString()] = value;
  }
  return result;
}

DateTime _toDateTime(dynamic data) {
  if (data == null) {
    return null;
  }
  if (data is String) {
    return DateTime.parse(data);
  }
  return data as DateTime;
}

double _toDouble(dynamic data) {
  if (data == null) {
    return null;
  }
  if (data is int) {
    return data.toDouble();
  }
  return data as double;
}

List<T> _toList<T>(dynamic data, T Function(dynamic) fromJson) {
  if (data == null) {
    return null;
  }
  var result = <T>[];
  for (var element in data) {
    T value;
    if (element != null) {
      value = fromJson(element);
    }
    result.add(value);
  }
  return result;
}

Map<K, V> _toMap<K extends String, V>(
    dynamic data, V Function(dynamic) fromJson) {
  if (data == null) {
    return null;
  }
  var result = <K, V>{};
  for (var key in data.keys) {
    V value;
    var element = data[key];
    if (element != null) {
      value = fromJson(element);
    }
    result[key.toString() as K] = value;
  }
  return result;
}

T _toObject<T>(dynamic data, T Function(dynamic) fromJson) {
  if (data == null) {
    return null;
  }
  return fromJson(data);
}

/*
Alias:
  clazz.class: String
Bar:
  i: int
Foo:
  bars: Map<String, Bar>
Order:
  amount: double
  date: DateTime
  items: List<OrderItem>
  is_shipped: bool
OrderItem:
  product: Product
  quantity: int
  price: num
Product:
  id: int
  name: String
ObjectWithObjects:
  list: List<Object>
  map: Map<String, Object>
Super:
  boolean: bool
  date: DateTime 
  float: double
  foo: Foo
  foo2: Foo
  integer: int
  string: String
  list: List<Map<String, Bar>>
  map: Map<String, List<Bar>>
  map2: Map<String, List<int>>
EmptyObject:
*/
